/* ExerciciosPizzaria
   REFAZER OS EXERCICIOS DE AULA 
*/

-- CONSULTAS SIMPLES 

CREATE DATABASE PIZZARIA;
USE PIZZARIA;
SHOW DATABASES;
describe CLIENTE;
SELECT * FROM CLIENTE;
SELECT NOME_CLIENTE,COMPLEMENTO FROM CLIENTE WHERE COMPLEMENTO="BLOCO G";  
SELECT CPF FROM CLIENTE WHERE CPF;  
SELECT * FROM ingredientes_pizza;  
SELECT INGREDIENTE FROM pizzaria.ingredientes_pizza WHERE COD_PIZZA=10;  
SELECT * FROM PEDIDO;  
SELECT NUM_PEDIDO,DTA_HOR_ABERTURA_PEDIDO FROM PIZZARIA.PEDIDO WHERE NUM_PEDIDO between 1 AND 20;  
  
  
-- PESQUISA OS PREÇOS DAS PIZZAS PARA ATUALIZAR A TABELA CONTEM

  SELECT CON.NUM_PEDIDO ,CON.COD_PIZZA ,CON.DESC_TAMANHO_PIZZA ,QUANTIDADE  
	  ,(SELECT TAM.PRECO_TAMANHO_PIZZA   FROM TAMANHO_PIZZA TAM  WHERE TAM.COD_PIZZA = CON.COD_PIZZA   AND TAM.DESC_TAMANHO_PIZZA = CON.DESC_TAMANHO_PIZZA ) PRECO
  FROM PIZZARIA.CONTEM CON;  
  
    
  -- ATUALIZA O FECHAMENTO DO PEDIDO 3 HORAS DEPOIS DA ABERTURA  
  
UPDATE PIZZARIA.PEDIDO SET 
       DTA_HOR_FECHAMENTO_PEDIDO = DATE_ADD(DTA_HOR_ABERTURA_PEDIDO, INTERVAL 5 HOUR)
 WHERE NUM_PEDIDO >= 1; 
 
 
 -- -- ATUALIZA OS PREÇOS NOS PEDIDOS COM OS PREÇOSDA TABELA DE TAMANHO_PIZZA
 
UPDATE PIZZARIA.CONTEM CON SET
		PRECO = (SELECT TAM.PRECO_TAMANHO_PIZZA
				   FROM TAMANHO_PIZZA TAM 
				  WHERE TAM.COD_PIZZA = CON.COD_PIZZA 
				    AND TAM.DESC_TAMANHO_PIZZA = CON.DESC_TAMANHO_PIZZA )
 WHERE CON.COD_PIZZA >= 1;
 
-- FAÇA UMA CONSULTA NA TABELA CLIENTE QUE
    - RETORNE:
    - A COLUNA CÓDIGO, FORMATADA COM ATÉ 10 BYTES, SENDO ZEROS À ESQUERDA
	- O NOME DO CLIENTE EM LETRAS MAIÚSCULAS
    - O EMAIL DO CLIENTE EM LETRAS MINÚSCULAS
    - O CPF DO CLIENTE FORMATADO 999.999.999-99
    --A SENHA DO CLIENTE INVERTIDA E ENCRIPTADA, SENDO:
      - 1 -> I	
      - 3 -> E
      - 4 -> A
      - 5 -> S
      - 6 -> G

SELECT LPAD(CLI.COD_CLIENTE, 10, '0') CODIGO
      ,UPPER(CLI.NOME_CLIENTE) NOME
      ,LOWER(CLI.EMAIL) EMAIL
      ,LPAD(CLI.CPF, 11, '0') CPF_PURO
      ,CONCAT(LEFT(LPAD(CLI.CPF, 11, '0'),3),'.', 
              SUBSTRING(LPAD(CLI.CPF, 11, '0'), 4, 3), '.',
              SUBSTRING(LPAD(CLI.CPF, 11, '0'),7, 3), '-',
              RIGHT(LPAD(CLI.CPF, 11, '0'), 2)) CPF
 	  ,REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CLI.SENHA, '1', 'I'),'3','E'),'4','A'),'5','S'),'5','G')) SENHA
  FROM PIZZARIA.CLIENTE CLI
  
-- O NOME DO CLIENTE EM LETRAS MAIÚSCULAS

SELECT CLI.COD_CLIENTE "Código"
      ,CLI.NOME_CLIENTE "Nome do Cliente"
      -- ,CLI.COD_CLIENTE + 5 CALCULO
  FROM PIZZARIA.CLIENTE CLI	
  
-- O EMAIL DO CLIENTE EM LETRAS MINÚSCULAS
SELECT CLI.COD_CLIENTE "Código" 
      ,CLI.NOME_CLIENTE "Nome do Cliente"
	  ,CLI.COD_CLIENTE + 5 CALCULO  
  FROM PIZZARIA.CLIENTE CLI	
  
  -- 7) SELECIONE TODOS OS CLIENTES CHAMADOS JOHN   
  
  SELECT COD_CLIENTE, NOME_CLIENTE, EMAIL
  FROM PIZZARIA.CLIENTE CLI
  WHERE CLI.NOME_CLIENTE LIKE 'JOHN%';
  
  SELECT COD_CLIENTE, NOME_CLIENTE, RUA
  FROM PIZZARIA.CLIENTE CLI
  WHERE CLI.NOME_CLIENTE LIKE 'SELMA%';
  
  
  -- 8) SELECIONE TODOS OS CLIENTES CUJAS SENHAS ESTEJAM ENTRE 1000 E 2000
  
 SELECT NOME_CLIENTE 
 FROM PIZZARIA.CLIENTE CLI
 WHERE CLI.SENHA between 1000 AND 2000;
 
 SELECT COD_CLIENTE, NOME_CLIENTE, SENHA
 FROM PIZZARIA.CLIENTE CLI
 WHERE CLI.SENHA BETWEEN 1000 AND 2000;
 
 -- 9)  SELECIONE TODOS AS CLIENTES ATIVAS
 
 SELECT NOME_CLIENTE, IDF_ATIVO
 FROM PIZZARIA.CLIENTE CLI
 WHERE CLI.IDF_ATIVO = 'S';
 
 SELECT NOME_CLIENTE, IDF_SEXO
 FROM pizzaria.cliente CLI
 WHERE CLI.IDF_SEXO = 'F';
 
 SELECT COD_CLIENTE,NOME_CLIENTE, RUA
 FROM pizzaria.cliente CLI
 WHERE CLI.IDF_SEXO = 'F'
 AND CLI.IDF_ATIVO LIKE'S';
 
 -- 10) SELECIONE TODOS OS CLIENTES INATIVOS
 
select COD_CLIENTE, NOME_CLIENTE, CPF
FROM PIZZARIA.CLIENTE CLIE
WHERE CLIE.IDF_ATIVO LIKE 'N';

-- 11) SELECIONE OS PEDIDOS PAGOS COM CARTÃO DE CRÉDITO (IDF_FORMA_PAGAMENTO = '4')

SELECT NUM_PEDIDO, COD_CLIENTE 
FROM PIZZARIA.PEDIDO PED
WHERE PED.IDF_FORMA_PAGAMENTO ='4';

SELECT PED.DTA_HOR_ABERTURA_PEDIDO,
	   PED.DTA_HOR_FECHAMENTO_PEDIDO
FROM PIZZARIA.PEDIDO PED
where PED.IDF_FORMA_PAGAMENTO LIKE '4';


-- 12) SELECIONE OS PEDIDOS (CONTEM) QUE TENHAM MAIS DE 1 PIZZA

SELECT NUM_PEDIDO, QUANTIDADE
FROM pizzaria.contem CON
WHERE CON.QUANTIDADE >1;

SELECT NUM_PEDIDO, 
		QUANTIDADE,
        round( QUANTIDADE * PRECO ) TOTAL
FROM PIZZARIA.CONTEM CON
WHERE CON.QUANTIDADE >=2;

SELECT COD_PIZZA, PRECO,
		round(QUANTIDADE * PRECO) TOTAL
FROM pizzaria.contem CON
WHERE CON.QUANTIDADE >=3;


-- 13) LISTE AS PIZZAS EM ORDEM ALFABÉTICA

SELECT NOME_PIZZA, COD_PIZZA
FROM PIZZARIA.PIZZA PI 
ORDER BY PI.NOME_PIZZA; 



-- 16) MODIFIQUE AS DATAS DE ABERTURA E FECHAMENTO DOS PEDIDOS, ADICIONANDO 2 ANOS A TODAS ELAS.

UPDATE PIZZARIA.PEDIDO SET
							DTA_HOR_ABERTURA_PEDIDO = date_add( DTA_HOR_ABERTURA_PEDIDO, INTERVAL 3 YEAR),
							DTA_HOR_FECHAMENTO_PEDIDO = DATE_ADD( DTA_HOR_FECHAMENTO_PEDIDO, INTERVAL 3 YEAR)
WHERE PEDIDO.NUM_PEDIDO = '0';


UPDATE PIZZARIA.PEDIDO SET 
	DTA_HOR_ABERTURA_PEDIDO = date_add(DTA_HOR_ABERTURA_PEDIDO, interval 2 YEAR ),
    DTA_HOR_FECHAMENTO_PEDIDO = DATE_ADD(DTA_HOR_FECHAMENTO_PEDIDO, INTERVAL 2 YEAR);

SELECT CLI.* 
 FROM PIZZARIA.CLIENTE CLI
 WHERE CLI.COD_CLIENTE =3;
 
 SELECT NOME_CLIENTE, COD_CLIENTE
 FROM PIZZARIA.CLIENTE CLI
 WHERE CLI.COD_CLIENTE <> 4;
 
 select NOME_CLIENTE , RUA
 FROM PIZZARIA.CLIENTE CLI
 WHERE CLI.COD_CLIENTE > 100;
 
 SELECT COD_CLIENTE, NOME_CLIENTE
 FROM pizzaria.cliente CLI
 WHERE CLI.COD_CLIENTE < 90;
 
 SELECT * FROM pizzaria.cliente CLI
 WHERE CLI.COD_CLIENTE between 100 AND 600;
 
 SELECT COD_CLIENTE, NOME_CLIENTE, RUA
 FROM PIZZARIA.CLIENTE CLI
 WHERE CLI.COD_CLIENTE between 10 AND 50;
 
 select COD_CLIENTE, NOME_CLIENTE 
 FROM PIZZARIA.CLIENTE CLI
 WHERE CLI.COD_CLIENTE IN (1,2,3,4,100,150);
 
 SELECT NUM_PEDIDO, QUANTIDADE
 FROM PIZZARIA.CONTEM CON
 WHERE CON.NUM_PEDIDO >=100;
 
 select NUM_PEDIDO, COD_CLIENTE
 FROM PIZZARIA.PEDIDO PED
 WHERE PED.DTA_HOR_ABERTURA_PEDIDO between '2000-01-01 00:00:00' AND '2022-01-31 23:59:59';
 
 SELECT * FROM pizzaria.cliente CLI
 WHERE CLI.COD_CLIENTE = 1
	OR CLI.COD_CLIENTE = 2
	OR CLI.COD_CLIENTE = 3
    OR CLI.COD_CLIENTE = 110
    OR CLI.COD_CLIENTE = 10;
    
SELECT * FROM PIZZARIA.CLIENTE CLI
WHERE CLI.NOME_CLIENTE LIKE 'AL%';
    
SELECT COD_CLIENTE, NOME_CLIENTE 
FROM PIZZARIA.CLIENTE CLI
WHERE CLI.COMPLEMENTO IS NULL;

update PIZZARIA.CLIENTE  SET
	COMPLEMENTO = null
WHERE COD_CLIENTE between 5 AND 15;

SELECT COD_CLIENTE, NOME_CLIENTE, RUA
FROM pizzaria.cliente CLI
WHERE CLI.COMPLEMENTO IS NULL
order by CLI.NOME_CLIENTE;

 SELECT COD_PIZZA, PRECO_TAMANHO_PIZZA
 FROM pizzaria.TAMANHO_PIZZA TAM
 WHERE TAM.PRECO_TAMANHO_PIZZA
 order by TAM.PRECO_TAMANHO_PIZZA;
 
 SELECT * 
  FROM PIZZARIA.TAMANHO_PIZZA TAM
 ORDER BY TAM.PRECO_TAMANHO_PIZZA DESC, TAM.DESC_TAMANHO_PIZZA
 
=================================================================

-- 1) Pesquise todos os pedidos com origem na Internet (ORIGEM_PEDIDO = '3') e que foi pedido pizza "A BAIANA".
SELECT * FROM PEDIDO;

SELECT COD_CLIENTE, IDF_ORIGEM_PEDIDO
FROM PIZZARIA.PEDIDO PED
WHERE PED.IDF_ORIGEM_PEDIDO ='3';

SELECT NOME_PIZZA
FROM PIZZARIA.PIZZA PIZ 
WHERE PIZ.NOME_PIZZA = 'A BAIANA';
==
SELECT  PED.NUM_PEDIDO,
		PED.DTA_HOR_ABERTURA_PEDIDO,
        PED.IDF_ORIGEM_PEDIDO,
        PIZ.NOME_PIZZA
FROM PIZZARIA.PEDIDO PED
JOIN PIZZARIA.CONTEM CON ON PED.NUM_PEDIDO = CON.NUM_PEDIDO
JOIN PIZZARIA.PIZZA PIZ ON CON.COD_PIZZA = PIZ.COD_PIZZA

WHERE PED.IDF_ORIGEM_PEDIDO = '3'
  AND PIZ.NOME_PIZZA = 'A BAIANA';
  ==========================================================================
SELECT  PED.NUM_PEDIDO,
		DTA_HOR_FECHAMENTO_PEDIDO,
        COD_CLIENTE,
        NOME_PIZZA
FROM PIZZARIA.PEDIDO PED
JOIN PIZZARIA.CONTEM CON ON PED.NUM_PEDIDO = CON.NUM_PEDIDO
JOIN PIZZARIA.PIZZA PIZ ON CON.COD_PIZZA = PIZ.COD_PIZZA
WHERE PED.IDF_ORIGEM_PEDIDO ='1' 
	AND PIZ.NOME_PIZZA = 'A BAIANA';
	====================================================================
    Pesquise todos os pedidos com origem na Internet (ORIGEM_PEDIDO = '3') e que foi pedido pizza "BANCO E MUSSARELA".
    
    SELECT * 
    FROM PIZZARIA.PEDIDO PED
    JOIN PIZZARIA.CONTEM CON ON PED.NUM_PEDIDO = CON.NUM_PEDIDO
    JOIN PIZZARIA.PIZZA PIZ ON CON.COD_PIZZA = PIZ.COD_PIZZA
	WHERE PED.IDF_ORIGEM_PEDIDO ='2'
		AND PIZ.NOME_PIZZA = 'BACON';
        
-- 2) Pesquise todos os pedidos feitos em Março/2021 

SELECT PED.NUM_PEDIDO,
		PED.COD_CLIENTE,
        CON.QUANTIDADE,
        CON.PRECO,
        PIZ.NOME_PIZZA
FROM PIZZARIA.PEDIDO PED
JOIN PIZZARIA.CONTEM CON ON PED.NUM_PEDIDO = CON.NUM_PEDIDO
JOIN PIZZARIA.PIZZA PIZ  ON CON.COD_PIZZA = PIZ.COD_PIZZA
WHERE PED.DTA_HOR_ABERTURA_PEDIDO between '2026-01-01 00:00:00' AND '2026-05-31 23:59:59';
    
SELECT * FROM CONTEM;


-- 3) Pesquise os clientes que pediram pizza 'BROTO' durante o mes de janeiro de 2022.

SELECT PED.COD_CLIENTE,
		PED.DTA_HOR_ABERTURA_PEDIDO,
        CON.QUANTIDADE,
        CON.PRECO,
        PIZ.NOME_PIZZA
FROM PIZZARIA.PEDIDO PED
JOIN PIZZARIA.CONTEM CON ON PED.NUM_PEDIDO = CON.NUM_PEDIDO
JOIN PIZZARIA.PIZZA PIZ ON CON.COD_PIZZA = PIZ.COD_PIZZA
WHERE PED.DTA_HOR_ABERTURA_PEDIDO BETWEEN '2022-01-01 00:00:00'
                                      AND '2028-01-31 23:59:59'
  AND CON.DESC_TAMANHO_PIZZA = 'BROTO';


-- 4)Liste os clientes que não tem telefone cadastrado no sistema.
SELECT * FROM TELEFONE_CLIENTE

SELECT CLI.COD_CLIENTE,
		CLI.NOME_CLIENTE,
        TEL.TELEFONE
FROM PIZZARIA.CLIENTE CLI
JOIN PIZZARIA.TELEFONE_CLIENTE TEL ON CLI.COD_CLIENTE = TEL.COD_CLIENTE
WHERE TEL.TELEFONE IS NULL;

SELECT CLI.COD_CLIENTE
      ,CLI.NOME_CLIENTE
      ,IFNULL(TEL.TELEFONE, 'CLIENTE NÃO TEM TELEFONE') TELEFONE
  FROM PIZZARIA.CLIENTE CLI
  LEFT JOIN PIZZARIA.TELEFONE_CLIENTE TEL ON CLI.COD_CLIENTE = TEL.COD_CLIENTE
 WHERE TEL.TELEFONE IS NULL
 ORDER BY CLI.COD_CLIENTE; 

    
    -- 5) Pesquise os clientes que tem pedidos com pelo menos 3 horas de intervalo (TIMEDIFF). 
    SELECT CLI.COD_CLIENTE,
			CLI.NOME_CLIENTE,
            CLI.RUA,
            PED.NUM_PEDIDO,
            PED.DTA_HOR_ABERTURA_PEDIDO
	FROM PIZZARIA.CLIENTE CLI
    JOIN PIZZARIA.PEDIDO PED ON CLI.COD_CLIENTE = PED.COD_CLIENTE
    WHERE TIMEDIFF(PED.DTA_HOR_ABERTURA_PEDIDO, PED.DTA_HOR_FECHAMENTO_PEDIDO)='03:00:00';
        
        
    -- 6) Liste o cardápio da pizzaria
    SELECT PIZ.COD_PIZZA,
			PIZ.NOME_PIZZA,
            ING.INGREDIENTE,
			TAM.PRECO_TAMANHO_PIZZA
	FROM PIZZARIA.PIZZA PIZ
    JOIN PIZZARIA.INGREDIENTES_PIZZA ING ON PIZ.COD_PIZZA = ING.COD_PIZZA
    JOIN PIZZARIA.TAMANHO_PIZZA TAM ON ING.COD_PIZZA = TAM.COD_PIZZA
    ORDER BY PIZ.NOME_PIZZA, ING.INGREDIENTE, TAM.PRECO_TAMANHO_PIZZA;  
    
    
	-- 7) Pesquise todos os clientes que pediram pizzas que custam mais de R$ 50,00.    
   SELECT CLI.COD_CLIENTE,
			CLI.NOME_CLIENTE,
            CON.QUANTIDADE,
            CON.PRECO
	FROM PIZZARIA.CLIENTE CLI
    JOIN PIZZARIA.CONTEM CON ON CLI.COD_CLIENTE = CON.NUM_PEDIDO
    WHERE CON.PRECO >= 50.00
    ORDER BY CLI.NOME_CLIENTE;
    
     SELECT * FROM INGREDIENTES_PIZZA;
          
    -- 8) Pesquise todos os clientes que pediram pizzas com "ALHO"
    SELECT PED.NUM_PEDIDO,
			PED.COD_CLIENTE,
            CLI.COD_CLIENTE,
            CLI.NOME_CLIENTE,            
            CON.QUANTIDADE,
            CON.PRECO,
            ING.INGREDIENTE
	FROM PIZZARIA.PEDIDO PED
    JOIN PIZZARIA.CLIENTE CLI ON PED.COD_CLIENTE = CLI.COD_CLIENTE    
	JOIN PIZZARIA.CONTEM CON ON CLI.COD_CLIENTE = CON.COD_PIZZA
    JOIN PIZZARIA.INGREDIENTES_PIZZA ING ON CON.COD_PIZZA = ING.COD_PIZZA  
    WHERE ING.INGREDIENTE = "ALHO"
	ORDER BY CLI.NOME_CLIENTE, ING.INGREDIENTE;  
    
    
    -- FULL JOIN     
    SELECT *
		FROM PIZZARIA.CLIENTE CLI, PIZZARIA.PIZZA PIZ;
    
    -- INNER JOIN
    -- CLIENTE DE UM PEDIDO
    SELECT CLI.NOME_CLIENTE,
			CLI.COD_CLIENTE,
			CLI.RUA
	FROM PIZZARIA.CLIENTE CLI
    JOIN PIZZARIA.PEDIDO PED ON CLI.COD_CLIENTE = PED.COD_CLIENTE
    WHERE PED.NUM_PEDIDO ='10';
    
    
    -- 20) TELEFONES DAS CLIENTES (MULHERES) DOS PEDIDO DE 1 A 10
    select CLI.NOME_CLIENTE,
			CLI.IDF_SEXO,
            PED.NUM_PEDIDO,
            TEL.TELEFONE
	from PIZZARIA.CLIENTE CLI
    JOIN PIZZARIA.PEDIDO PED  ON CLI.COD_CLIENTE = PED.COD_CLIENTE
    JOIN PIZZARIA.TELEFONE_CLIENTE TEL  ON PED.COD_CLIENTE = TEL.COD_CLIENTE
    WHERE PED.NUM_PEDIDO between 1 AND 10
    AND CLI.IDF_SEXO ='F'
    ORDER BY PED.NUM_PEDIDO;	
			
	-- OUTER JOINS
    -- LISTA TODOS OS CLIENTES, INDEPENDENTE DE TER OU NÃO TELEFONE
    
    SELECT CLI.COD_CLIENTE
      ,CLI.NOME_CLIENTE
      ,TEL.TELEFONE
  FROM PIZZARIA.CLIENTE CLI
  LEFT JOIN PIZZARIA.TELEFONE_CLIENTE TEL ON CLI.COD_CLIENTE = TEL.COD_CLIENTE
 ORDER BY CLI.COD_CLIENTE
 
-- RETORNA APENAS CLIENTES QUE NÃO TEM TELEFONE

SELECT CLI.COD_CLIENTE
      ,CLI.NOME_CLIENTE
      ,IFNULL(TEL.TELEFONE, 'CLIENTE NÃO TEM TELEFONE') TELEFONE
  FROM PIZZARIA.CLIENTE CLI
 LEFT JOIN PIZZARIA.TELEFONE_CLIENTE TEL ON CLI.COD_CLIENTE = TEL.COD_CLIENTE
 WHERE TEL.TELEFONE IS NULL
 order by cli.nome_cliente;

    
    SELECT * 
    FROM PIZZARIA.CLIENTE CLI
    order by CLI.NOME_CLIENTE;
    
  -- AULA 25/04
  
-- 21) Média de gasto por cliente no mês de abril/2021
	SELECT CLI.NOME_CLIENTE,
			CLI.COD_CLIENTE,
            AVG(CON.QUANTIDADE * CON.PRECO) GASTO_MEDIO
	FROM PIZZARIA.CLIENTE CLI 
    JOIN PIZZARIA.CONTEM CON ON CLI.COD_CLIENTE = CON.NUM_PEDIDO
    JOIN PIZZARIA.PEDIDO PED ON CON.NUM_PEDIDO = PED.NUM_PEDIDO
	WHERE PED.DTA_HOR_ABERTURA_PEDIDO BETWEEN '2026-06-01 00:00:00'
										  AND '2030-10-01 23:59:59'
    ORDER BY   CLI.COD_CLIENTE;
    
SELECT * FROM PEDIDO;

-- 2) Clientes que pediram pizzas com BACON e que gastaram mais de R$ 100,00
   SELECT CLI.NOME_CLIENTE
         ,SUM(CON.QUANTIDADE * CON.PRECO) TOTAL_GASTO
	 FROM PIZZARIA.CLIENTE CLI
     JOIN PIZZARIA.PEDIDO PED ON CLI.COD_CLIENTE = PED.COD_CLIENTE
     JOIN PIZZARIA.CONTEM CON ON PED.NUM_PEDIDO = CON.NUM_PEDIDO
     JOIN PIZZARIA.INGREDIENTES_PIZZA ING ON CON.COD_PIZZA = ING.COD_PIZZA
	WHERE ING.INGREDIENTE = 'BACON'
    GROUP BY CLI.NOME_CLIENTE
   HAVING SUM(CON.QUANTIDADE * CON.PRECO) >= 100
    ORDER BY 2 DESC;


-- 22) Pesquise todos as pizzas e o seu preço para as que utilizam mais de 3 ingredientes.
    
SELECT PIZ.NOME_PIZZA,
		 TAM.DESC_TAMANHO_PIZZA
        ,TAM.PRECO_TAMANHO_PIZZA
        ,COUNT(ING.INGREDIENTE) QTDE_INGREDIENTES        
    FROM PIZZARIA.PIZZA PIZ
    JOIN PIZZARIA.INGREDIENTES_PIZZA ING ON PIZ.COD_PIZZA = ING.COD_PIZZA
	JOIN PIZZARIA.TAMANHO_PIZZA TAM ON PIZ.COD_PIZZA = TAM.COD_PIZZA    
   GROUP BY PIZ.NOME_PIZZA
           ,TAM.DESC_TAMANHO_PIZZA
           ,TAM.PRECO_TAMANHO_PIZZA
  HAVING COUNT(ING.INGREDIENTE) >= 4; 
  
-- SUBSELECTS-----------------------------------

SELECT CLI.COD_CLIENTE
      ,CLI.NOME_CLIENTE
      ,(SELECT COUNT(*)
          FROM PIZZARIA.PEDIDO PED
		 WHERE PED.COD_CLIENTE = CLI.COD_CLIENTE) QTDE_PEDIDOS
  FROM PIZZARIA.CLIENTE CLI;
  
USE PIZZARIA;

SELECT NOME_CLIENTE,
       COD_CLIENTE,
       RUA
FROM CLIENTE
WHERE COD_CLIENTE= 
	(SELECT COD_CLIENTE 
	 FROM PEDIDO
     WHERE NUM_PEDIDO='150');
     
SELECT CLI.NOME_CLIENTE,
		CLI.RUA,
        COD_CLIENTE
FROM PIZZARIA.CLIENTE CLI
WHERE COD_CLIENTE=
(SELECT PED.COD_CLIENTE
	FROM PIZZARIA.PEDIDO PED
    WHERE PED.NUM_PEDIDO="150");
    
-- VISÃO==============================================================
  
  CREATE VIEW PIZZARIA.VW_DELICIAS
  AS SELECT PIZ.NOME_PIZZA
  FROM PIZZARIA.PIZZA PIZ  
  WHERE COD_PIZZA = '13';
  
  
  CREATE VIEW PIZZARIA.TAMANHO_DA_PIZZA 
  AS SELECT PIZ.NOME_PIZZA,
			TAM.DESC_TAMANHO_PIZZA,
            TAM.PRECO_TAMANHO_PIZZA
	FROM PIZZARIA.PIZZA PIZ
    JOIN PIZZARIA.TAMANHO_PIZZA TAM ON PIZ.COD_PIZZA
    GROUP BY PIZ.NOME_PIZZA;   
    
  CREATE VIEW PIZZARIA.VW_PIZZAS AS 
  SELECT PIZ.NOME_PIZZA
		,TAM.DESC_TAMANHO_PIZZA
        ,TAM.PRECO_TAMANHO_PIZZA
        ,COUNT(ING.INGREDIENTE) QTDE_INGREDIENTES
    FROM PIZZARIA.PIZZA PIZ
    JOIN PIZZARIA.INGREDIENTES_PIZZA ING ON PIZ.COD_PIZZA = 
                                            ING.COD_PIZZA
	JOIN PIZZARIA.TAMANHO_PIZZA TAM ON PIZ.COD_PIZZA = TAM.COD_PIZZA
   GROUP BY PIZ.NOME_PIZZA
           ,TAM.DESC_TAMANHO_PIZZA
           ,TAM.PRECO_TAMANHO_PIZZA
  HAVING COUNT(ING.INGREDIENTE) >= 3
  
  -- CREATE PROCEDURE ==========================================================
  
  CREATE PROCEDURE verPreco (varPizza smallint)
  SELECT CONCAT ('O preço da pizza é ' , PRECO) AS Preço
  FROM PIZZARIA.CONTEM PED
  WHERE COD_PIZZA = varPizza;
  
  CALL verPreço(1);   
  
  
DELIMITER ;;
CREATE PROCEDURE RAISE_MESSAGE_ERROR(ERRNO BIGINT UNSIGNED, MESSAGE TEXT)
BEGIN
  DECLARE AUX VARCHAR(500);
  SELECT SUBSTRING(MESSAGE, 1, 128) INTO AUX; -- EXIBE APENAS OS PRIMEIROS 128 CARACTERES
  SIGNAL SQLSTATE 'ERR0R'
  SET
  MESSAGE_TEXT = AUX,
  MYSQL_ERRNO = ERRNO;
END ;;
DELIMITER ;

-- DECLARAR VARIAVEIS =========================================
DELIMITER;;
CREATE FUNCTION calcula_desconto (PIZZA INT, desconto DECIMAL(10,2))
returns DECIMAL(10,2)
BEGIN
	DECLARE preco Decimal(10,2);
		SELECT PRECO FROM PIZZARIA.CONTEM PIZ;
		WHERE PIZ_
    RETURN PRECO - DESCONTO;
END
DELIMITER;;

  
 



  



 
